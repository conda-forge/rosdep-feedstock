diff --git a/src/rosdep2/catkin_support.py b/src/rosdep2/catkin_support.py
index 4fb3fb3b8..f57b0410a 100644
--- a/src/rosdep2/catkin_support.py
+++ b/src/rosdep2/catkin_support.py
@@ -104,7 +104,7 @@ def get_catkin_view(rosdistro_name, os_name, os_version, update=True):
     sources_list_dir = get_sources_list_dir()
     if not os.path.exists(sources_list_dir):
         raise ValidationFailed("""rosdep database is not initialized, please run:
-\tsudo rosdep init
+\rosdep init
 """)
 
     if update:
diff --git a/src/rosdep2/main.py b/src/rosdep2/main.py
index 63c080543..254a37995 100644
--- a/src/rosdep2/main.py
+++ b/src/rosdep2/main.py
@@ -179,7 +179,7 @@ def rosdep_main(args=None):
         sys.exit(1)
     except CachePermissionError as e:
         print(str(e), file=sys.stderr)
-        print("Try running 'sudo rosdep fix-permissions'", file=sys.stderr)
+        print("Try running 'rosdep fix-permissions'", file=sys.stderr)
         sys.exit(1)
     except UnsupportedOs as e:
         print('Unsupported OS: %s\nSupported OSes are [%s]' % (e.args[0], ', '.join(e.args[1])), file=sys.stderr)
@@ -217,11 +217,11 @@ def check_for_sources_list_init(sources_cache_dir):
 
     sources_list_dir = get_sources_list_dir()
     if not os.path.exists(sources_list_dir):
-        commands.insert(0, 'sudo rosdep init')
+        commands.insert(0, 'rosdep init')
     else:
         filelist = [f for f in os.listdir(sources_list_dir) if f.endswith('.list')]
         if not filelist:
-            commands.insert(0, 'sudo rosdep init')
+            commands.insert(0, 'rosdep init')
 
     if commands:
         commands = '\n'.join(['    %s' % c for c in commands])
@@ -620,7 +620,7 @@ def command_init(options):
         print('ERROR: cannot create %s:\n\t%s' % (path, e), file=sys.stderr)
         return 2
     except OSError as e:
-        print("ERROR: cannot create %s:\n\t%s\nPerhaps you need to run 'sudo rosdep init' instead" % (path, e), file=sys.stderr)
+        print("ERROR: cannot create %s:\n\t%s\nPerhaps you need to run 'rosdep init' instead" % (path, e), file=sys.stderr)
         return 3
     finally:
         os.umask(old_umask)
@@ -643,12 +643,12 @@ def update_error_handler(data_source, exc):
     warnings.filterwarnings('ignore', category=PreRep137Warning)
 
     if not os.path.exists(sources_list_dir):
-        print('ERROR: no sources directory exists on the system meaning rosdep has not yet been initialized.\n\nPlease initialize your rosdep with\n\n\tsudo rosdep init\n', file=sys.stderr)
+        print('ERROR: no sources directory exists on the system meaning rosdep has not yet been initialized.\n\nPlease initialize your rosdep with\n\n\trosdep init\n', file=sys.stderr)
         return 1
 
     filelist = [f for f in os.listdir(sources_list_dir) if f.endswith('.list')]
     if not filelist:
-        print('ERROR: no data sources in %s\n\nPlease initialize your rosdep with\n\n\tsudo rosdep init\n' % sources_list_dir, file=sys.stderr)
+        print('ERROR: no data sources in %s\n\nPlease initialize your rosdep with\n\n\trosdep init\n' % sources_list_dir, file=sys.stderr)
         return 1
     try:
         if not options.quiet:
@@ -657,7 +657,7 @@ def update_error_handler(data_source, exc):
         try:
             if os.geteuid() == 0:
                 print("Warning: running 'rosdep update' as root is not recommended.", file=sys.stderr)
-                print("  You should run 'sudo rosdep fix-permissions' and invoke 'rosdep update' again without sudo.", file=sys.stderr)
+                print("  You should run 'rosdep fix-permissions' and invoke 'rosdep update' again without sudo.", file=sys.stderr)
         except AttributeError:
             # nothing we wanna do under Windows
             pass
